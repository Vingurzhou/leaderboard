syntax = "proto3";

package leaderboard.leaderboard;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "leaderboard/leaderboard/params.proto";
import "leaderboard/leaderboard/player_info.proto";

option go_package = "leaderboard/x/leaderboard/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/leaderboard/leaderboard/params";
  
  }
  
  // Queries a list of PlayerInfo items.
  rpc PlayerInfo    (QueryGetPlayerInfoRequest) returns (QueryGetPlayerInfoResponse) {
    option (google.api.http).get = "/leaderboard/leaderboard/player_info/{index}";
  
  }
  rpc PlayerInfoAll (QueryAllPlayerInfoRequest) returns (QueryAllPlayerInfoResponse) {
    option (google.api.http).get = "/leaderboard/leaderboard/player_info";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPlayerInfoRequest {
  string index = 1;
}

message QueryGetPlayerInfoResponse {
  PlayerInfo playerInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllPlayerInfoRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPlayerInfoResponse {
  repeated PlayerInfo                             playerInfo = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

